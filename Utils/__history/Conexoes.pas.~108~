unit Conexoes;

interface

Uses Classes, XSuperObject, IdHTTP, Vcl.Controls,Vcl.ExtDlgs, System.SysUtils,
IdServerIOHandler, IdSSL, IdSSLOpenSSL, IdIOHandler, IdIOHandlerSocket,
IdIOHandlerStack, idLogFile, IdGlobal, MainCode;

function OauthToken: iSuperObject;
function SetupClient: TIdHTTP;

Const
  //Produção
//  ClientID = 'Client_Id_456f4f209cd478a6340a13890d6f334e0c757d8d';
//  ClientSecret = 'Client_Secret_19dce13a4de5de7f8f6f67004c1303cfe023b1e7';
  //URL = 'https://api-pix.gerencianet.com.br';
  //CertFilePem = 'C:\Users\luiz.campos\OneDrive - Gerencianet S.A\Documentos\Embarcadero\Studio\Projects\gn-api-pix-sdk-delphi\Api Compilada\crtProd.crt.pem';
  //KeyFilePem  = 'C:\Users\luiz.campos\OneDrive - Gerencianet S.A\Documentos\Embarcadero\Studio\Projects\gn-api-pix-sdk-delphi\Api Compilada\keyProd.key.pem';

  //Homologação
  //ClientID = 'Client_Id_c0e8aceaf7de215ed1522b6af74f6a7f731db2f7';
  //ClientSecret = 'Client_Secret_15ba8371ef2ed984a7a61de81e9f3baae3360312';
  //URL = 'https://api-pix-h.gerencianet.com.br';
 // CertFilePem = 'C:\Users\luiz.campos\OneDrive - Gerencianet S.A\Documentos\Embarcadero\Studio\Projects\gn-api-pix-sdk-delphi\Api Compilada\crtHom.crt.pem';
  KeyFilePem = 'C:\Users\luiz.campos\OneDrive - Gerencianet S.A\Documentos\Embarcadero\Studio\Projects\gn-api-pix-sdk-delphi\Api Compilada\keyHom.key.pem';


implementation

threadvar
  HttpClient: TIdHTTP;
  {$IFDEF DEBUG}
  HttpLog: TIdLogFile;
  {$ENDIF}
  JsonToSend: TMemoryStream;

{ TConexoes }

function OauthToken : iSuperObject ;
Const
  Body = '{"grant_type": "client_credentials"}';
var
  sResponse : String;
begin
    HttpClient := SetupClient;

    HttpClient.Request.Username := MainCode.MainFrm.ClientID;
    HttpClient.Request.Password := MainCode.MainFrm.ClientSecret;

    HttpClient.Request.BasicAuthentication := True;

    JsonToSend := TMemoryStream.Create;
    WriteStringToStream(JsonToSend, Body, IndyTextEncoding_UTF8);
    JsonToSend.Position := 0;

    sResponse := HttpClient.Post(MainCode.MainFrm.Enviroment +'/oauth/token',JsonToSend);

    Result := SO(sResponse);
end;

function SetupClient: TIdHTTP;
begin
  Result := TIdHTTP.Create( nil );
  Result.ConnectTimeout := 20000;
  Result.IOHandler := TIdSSLIOHandlerSocketOpenSSL.Create(nil);

  with TIdSSLIOHandlerSocketOpenSSL(Result.IOHandler).SSLOptions do
  begin
    CertFile := MainCode.MainFrm.CertFilePem;
    KeyFile  := KeyFilePem;

    Mode := sslmUnassigned;
    SSLVersions := [sslvTLSv1_2];
  end;

  with Result do
  begin
    Request.CustomHeaders.Values['Content-Type'] := 'application/json; application/x-www-form-urlencoded;';
    Request.ContentType := 'application/json';
    Request.CharSet     := 'utf-8';
    Request.UserAgent := 'Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0; Acoo Browser; GTB5; Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1) ; Maxthon; InfoPath.1; .NET CLR 3.5.30729; .NET CLR 3.0.30618)';
    HandleRedirects := True;
    HTTPOptions := [hoKeepOrigProtocol, hoInProcessAuth];
  end;

  {$IFDEF DEBUG}
    Result.Intercept := HttpLog;
  {$ENDIF}
end;

end.
